{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Plugin",
  "type": "object",
  "properties": {
    "icon": {
      "description": "Optional icon to be used on settings. This have to be a valid react icon name.\\\nYou can find all icons here: https://react-icons.github.io/react-icons/.",
      "type": "string",
      "default": "PiPuzzlePieceDuotone"
    },
    "id": {
      "$ref": "#/$defs/PluginId"
    },
    "metadata": {
      "$ref": "#/$defs/ResourceMetadata",
      "default": {
        "appTargetVersion": null,
        "banner": null,
        "bundled": false,
        "description": {},
        "displayName": {},
        "filename": "",
        "path": "",
        "portrait": null,
        "screenshots": [],
        "tags": []
      }
    }
  },
  "anyOf": [
    {
      "$ref": "#/$defs/KnownPlugin"
    },
    {
      "$ref": "#/$defs/ThirdPartyPlugin"
    }
  ],
  "required": [
    "id"
  ],
  "$defs": {
    "HwinfoToolbarItem": {
      "type": "object",
      "properties": {
        "badge": {
          "description": "Badge will be displayed over the item, useful as notifications.\n\nShould follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).\n\n## Hwinfo Item Scope\nthis module does no expand the scope of the item",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "id": {
          "description": "Id to identify the item, should be unique.",
          "type": "string",
          "default": ""
        },
        "onClick": {
          "description": "Deprecated use `onClickV2` instead.",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "onClickV2": {
          "description": "This code will be parsed and executed when the item is clicked.\n\nShould follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).\n\n## Hwinfo Item Scope\nthis module does no expand the scope of the item",
          "type": [
            "string",
            "null"
          ],
          "default": null
        },
        "remoteData": {
          "description": "Remote data to be added to the item scope.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/RemoteDataDeclaration"
          },
          "default": {}
        },
        "sensors": {
          "description": "Sensors to query from the system",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "style": {
          "description": "Styles to be added to the item. This follow the same interface of React's `style` prop.",
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "$ref": "#/$defs/StyleValue"
              },
              {
                "type": "null"
              }
            ]
          },
          "default": {}
        },
        "template": {
          "description": "Content to display in the item.\n\nShould follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).\n\n## Hwinfo Item Scope\nthis module does no expand the scope of the item",
          "type": "string",
          "default": ""
        },
        "tooltip": {
          "description": "Content to display in tooltip of the item.\n\nShould follow the [mathjs expression syntax](https://mathjs.org/docs/expressions/syntax.html).\n\n## Hwinfo Item Scope\nthis module does no expand the scope of the item",
          "type": [
            "string",
            "null"
          ],
          "default": null
        }
      }
    },
    "KnownPlugin": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "plugin": {
              "$ref": "#/$defs/HwinfoToolbarItem"
            },
            "target": {
              "type": "string",
              "const": "@seelen/fancy-toolbar"
            }
          },
          "required": [
            "target",
            "plugin"
          ]
        },
        {
          "type": "object",
          "properties": {
            "plugin": {
              "$ref": "#/$defs/WindowManagerLayout"
            },
            "target": {
              "type": "string",
              "const": "@seelen/window-manager"
            }
          },
          "required": [
            "target",
            "plugin"
          ]
        }
      ]
    },
    "NoFallbackBehavior": {
      "type": "string",
      "enum": [
        "Float",
        "Unmanaged"
      ]
    },
    "NodeSubtype": {
      "type": "string",
      "enum": [
        "Temporal",
        "Permanent"
      ]
    },
    "PluginId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "$ref": "#/$defs/ResourceId"
    },
    "RemoteDataDeclaration": {
      "type": "object",
      "properties": {
        "requestInit": {
          "anyOf": [
            {
              "$ref": "#/$defs/TsUnknown"
            },
            {
              "type": "null"
            }
          ]
        },
        "updateIntervalSeconds": {
          "type": [
            "integer",
            "null"
          ],
          "format": "uint32",
          "minimum": 0
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "url"
      ]
    },
    "ResourceId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "type": "string"
    },
    "ResourceMetadata": {
      "type": "object",
      "properties": {
        "appTargetVersion": {
          "description": "App target version that this resource is compatible with.\\\nDevelopers are responsible to update the resource so when resource does not\nmatch the current app version, the resource will be shown with a warning message",
          "type": [
            "array",
            "null"
          ],
          "default": null,
          "maxItems": 3,
          "minItems": 3,
          "prefixItems": [
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            },
            {
              "type": "integer",
              "format": "uint32",
              "minimum": 0
            }
          ]
        },
        "banner": {
          "description": "Banner image with aspect ratio of 21/9, this is used when promoting the resource.",
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "default": null
        },
        "description": {
          "description": "Map of language code to description. Could be a string, mapped to `en`.",
          "$ref": "#/$defs/ResourceText",
          "default": {}
        },
        "displayName": {
          "description": "Map of language code to display name. Could be a string, mapped to `en`.",
          "$ref": "#/$defs/ResourceText",
          "default": {}
        },
        "portrait": {
          "description": "Portrait image with aspect ratio of 1/1",
          "type": [
            "string",
            "null"
          ],
          "format": "uri",
          "default": null
        },
        "screenshots": {
          "description": "Screenshots should use aspect ratio of 16/9",
          "type": "array",
          "default": [],
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "tags": {
          "description": "tags are keywords to be used for searching and indexing",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ResourceText": {
      "description": "Map of language code as key an translated values. Could be a string, mapped to `en`.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      ]
    },
    "StyleValue": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        }
      ]
    },
    "ThirdPartyPlugin": {
      "type": "object",
      "properties": {
        "plugin": {
          "description": "The plugin data, this can be anything and depends on the widget using this plugin\nto handle it, parse it and use it.",
          "$ref": "#/$defs/TsUnknown"
        },
        "target": {
          "description": "The friendly id of the widget that will use this plugin\nexample: `@username/widget-name`",
          "$ref": "#/$defs/WidgetId"
        }
      },
      "required": [
        "target",
        "plugin"
      ]
    },
    "TsUnknown": true,
    "WidgetId": {
      "description": "Visual id composed of the creator username and the resource name. e.g. `@username/resource-name`",
      "$ref": "#/$defs/ResourceId"
    },
    "WindowManagerLayout": {
      "type": "object",
      "properties": {
        "noFallbackBehavior": {
          "$ref": "#/$defs/NoFallbackBehavior",
          "default": "Float"
        },
        "structure": {
          "$ref": "#/$defs/WmNode",
          "default": {
            "active": null,
            "condition": null,
            "growFactor": 1.0,
            "handles": [],
            "priority": 1,
            "subtype": "Permanent",
            "type": "Fallback"
          }
        }
      }
    },
    "WmFallbackNode": {
      "type": "object",
      "properties": {
        "condition": {
          "description": "Math Condition for the node to be shown, e.g: n >= 3",
          "type": [
            "string",
            "null"
          ]
        },
        "growFactor": {
          "description": "How much of the remaining space this node will take",
          "type": "number",
          "format": "float",
          "default": 1.0
        },
        "priority": {
          "description": "Order in how the tree will be traversed (1 = first, 2 = second, etc.)",
          "type": "integer",
          "format": "uint32",
          "default": 1,
          "minimum": 0
        },
        "subtype": {
          "$ref": "#/$defs/NodeSubtype",
          "default": "Permanent"
        }
      }
    },
    "WmHorizontalNode": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/WmNode"
          }
        },
        "condition": {
          "description": "Math Condition for the node to be shown, e.g: n >= 3",
          "type": [
            "string",
            "null"
          ]
        },
        "growFactor": {
          "description": "How much of the remaining space this node will take",
          "type": "number",
          "format": "float",
          "default": 1.0
        },
        "priority": {
          "description": "Order in how the tree will be traversed (1 = first, 2 = second, etc.)",
          "type": "integer",
          "format": "uint32",
          "default": 1,
          "minimum": 0
        },
        "subtype": {
          "$ref": "#/$defs/NodeSubtype",
          "default": "Permanent"
        }
      },
      "required": [
        "children"
      ]
    },
    "WmLeafNode": {
      "type": "object",
      "properties": {
        "condition": {
          "description": "Math Condition for the node to be shown, e.g: n >= 3",
          "type": [
            "string",
            "null"
          ]
        },
        "growFactor": {
          "description": "How much of the remaining space this node will take",
          "type": "number",
          "format": "float",
          "default": 1.0
        },
        "handle": {
          "description": "window handle (HWND) in the node",
          "type": [
            "integer",
            "null"
          ],
          "format": "int"
        },
        "priority": {
          "description": "Order in how the tree will be traversed (1 = first, 2 = second, etc.)",
          "type": "integer",
          "format": "uint32",
          "default": 1,
          "minimum": 0
        },
        "subtype": {
          "$ref": "#/$defs/NodeSubtype",
          "default": "Permanent"
        }
      }
    },
    "WmNode": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Vertical"
            }
          },
          "$ref": "#/$defs/WmVerticalNode",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Horizontal"
            }
          },
          "$ref": "#/$defs/WmHorizontalNode",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Leaf"
            }
          },
          "$ref": "#/$defs/WmLeafNode",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Stack"
            }
          },
          "$ref": "#/$defs/WmStackNode",
          "required": [
            "type"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "const": "Fallback"
            }
          },
          "$ref": "#/$defs/WmFallbackNode",
          "required": [
            "type"
          ]
        }
      ]
    },
    "WmStackNode": {
      "type": "object",
      "properties": {
        "condition": {
          "description": "Math Condition for the node to be shown, e.g: n >= 3",
          "type": [
            "string",
            "null"
          ]
        },
        "growFactor": {
          "description": "How much of the remaining space this node will take",
          "type": "number",
          "format": "float",
          "default": 1.0
        },
        "priority": {
          "description": "Order in how the tree will be traversed (1 = first, 2 = second, etc.)",
          "type": "integer",
          "format": "uint32",
          "default": 1,
          "minimum": 0
        },
        "subtype": {
          "$ref": "#/$defs/NodeSubtype",
          "default": "Permanent"
        }
      }
    },
    "WmVerticalNode": {
      "type": "object",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/WmNode"
          }
        },
        "condition": {
          "description": "Math Condition for the node to be shown, e.g: n >= 3",
          "type": [
            "string",
            "null"
          ]
        },
        "growFactor": {
          "description": "How much of the remaining space this node will take",
          "type": "number",
          "format": "float",
          "default": 1.0
        },
        "priority": {
          "description": "Order in how the tree will be traversed (1 = first, 2 = second, etc.)",
          "type": "integer",
          "format": "uint32",
          "default": 1,
          "minimum": 0
        },
        "subtype": {
          "$ref": "#/$defs/NodeSubtype",
          "default": "Permanent"
        }
      },
      "required": [
        "children"
      ]
    }
  }
}